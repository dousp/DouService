###########################
#    Spring Boot
###########################

# 应用名称
spring.application.name=demo-service

# 应用根路径
server.context-path=/demo-service

# 端口
server.port= 8000

# 激活环境配置
spring.profiles.active=dev


# 查看actuator提供的原生断点
management.security.enabled=false
management.context-path=/mgmt

#################################################################################
#                                coustom
#################################################################################

info.msg = ${spring.application.name} is a test project!
info.key = ${random.uuid}
info.mail = douspeng@sina.cn

#################################################################################
#                                Eureka
#################################################################################

# 服务地址区域，多个用逗号隔开
eureka.client.service-url.defaultZone=http://localhost:1111/eureka
# 显示IP地址
eureka.instance.prefer-ip-address=true
# 将Instance ID设置成IP:端口的形式
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}${server.context-path}

#eureka.instance.statusPageUrlPath = ${management.context-path}/info
#eureka.instance.healthCheckUrlPath = ${management.context-path}/health

# 状态页面的URL，相对路径，默认使用 HTTP 访问，如果需要使用 HTTPS则需要使用绝对路径配置 /info
#eureka.instance.status-page-url-path =
# 状态页面的URL，绝对路径
eureka.instance.status-page-url = http://${spring.cloud.client.ipAddress}:${server.port}${server.context-path}${management.context-path}/info

# 健康检查页面的URL，相对路径，默认使用 HTTP 访问，如果需要使用 HTTPS则需要使用绝对路径配置 /health
#eureka.instance.health-check-url-path =
# 健康检查页面的URL，绝对路径
#eureka.instance.health-check-url = http://${spring.cloud.client.ipAddress}:${server.port}${server.context-path}${management.context-path}/health


# 开启健康检查（需要spring-boot-starter-actuator依赖）
#eureka.client.healthcheck.enabled = true

# 设置拉取服务注册信息时间，默认60s（如果要迅速获取服务注册状态，可以缩小该值。比如：网关接口启动需要马上调用）
#eureka.client.registry-fetch-interval-seconds=30

# 续约更新时间间隔，默认30秒 （可以解决Eureka注册服务慢的问题，注意：在生产中，最好坚持使用默认值，因为在服务器内部有一些计算，他们对续约做出假设）
#eureka.instance.lease-renewal-interval-in-seconds = 15

# 设置过期剔除时间，默认90s:
#       表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间。
#       如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#       如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#       该值至少应该大于leaseRenewalIntervalInSeconds。
#eureka.instance.lease-expiration-duration-in-seconds=45


